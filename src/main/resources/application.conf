# Global settings
global {
  #in test mode the input dataset is limited to only part of the entries
  testMode = false
  #weather to include all the issue comments or only its full description
  includeComments = true
  # type of tokenizer to use 0 - dummy | 1 - regexp | 2 - NLP | 3 - POS
  tokenizerType = 3
  # mimimum token length
  minWordSize = 4
  # time intervals to consider
  timeIntervals = 3
  # mimimum number of issues fixed in a time interval in
  # order to consider the user a valid candidate
  issuesThreshold = 3
  # time interval in days in which to apply the issuesThreshold
  timeThreshold = 30
  # use issues updated no later than thin number of days back
  timeThresholdForTraining = 240
  # field id used for bug status (11 for eclipse, 12 for netbeans, 5 for firefox)
  statusFieldId = 5
  # true to use assign_to field, false to identify the user based on who marked the bug as fixed
  use_assigned_to=true
}

filesystem {
  root: "/Users/acflorea/phd/columbugus_data/netbeans_n"
  #root: "/Users/acflorea/phd/columbugus_data/eclipse"
  #root: "/Users/acflorea/phd/columbugus_data/firefox_n"
  # root: "gs://dataproc-1e7dadea-6c68-4715-b356-2a8742d25022-eu/columbugus"
}

# MySQL server
mySQL {
  url = "jdbc:mysql://localhost:3306/netbeansbugs"
  #url = "jdbc:mysql://localhost:3306/eclipsebugs"
  #url = "jdbc:mysql://localhost:3306/firefoxbugs"
  username = "root"
  password = "mysql"
}

# Execution phases
phases {
  cleansing = false
  transform = false
  preprocess = true
}

# transform specific params
transform {
  minDocFreq = 2
  maxDocFreq = 1000 # ~15% of the training data size
}

# preprocess specific params
preprocess {
  simple = true

  pca = false

  chi2 = false
  chi2Features = 10000

  lda = false
  ldaTopics = 1000
  ldaOptimizer = "em"
  # topic concentration - 0.1 + 1 (em); 1.0 / k (online) #1.1
  ldaAlpha = -1
  # document concentration - 50/k +1 # 1.05
  ldaBeta = -1
  ldaModels = 1

  undersampling = false

  normalize = true
  includeCategory = true
  categoryScalingFactor = 92
  categoryMultiplier = 92
}

postprocess {
  normalize = false
}

# Spark context
spark {
  master = "local"
  appName = "Columb(ug)us"
  driver.memory = 8g
  client.memory = 8g
  driver.maxResultSize = 2048
}

# Slick - db to populate
mySQLBugsDB = {
  url = "jdbc:mysql://localhost:3306/firefoxbugs?characterEncoding=UTF-8"
  slick.driver = scala.slick.driver.MySQLDriver
  driver = com.mysql.jdbc.Driver
  connectionPool = disabled
  keepAliveConnection = true
  user = "root"
  password = "mysql"
  autoCommit = true
}